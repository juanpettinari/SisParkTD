@model IEnumerable<SisParkTD.Models.ViewModels.RolUsuarioViewModel>


@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>
@using (Html.BeginForm("Index", "RolesUsuarios", FormMethod.Get))
{
    <table class="table table-bordered">
        <tr>
            <th>
                Rol
            </th>
            <th>
                Usuario
            </th>
            <th></th>
        </tr>
        <tr>
            <td>
                @Html.DropDownList("ddRol", null, "", new { @onchange = "this.form.submit();" })
            </td>

            <td>
                @Html.DropDownList("ddUsuario", null, "", new {@onchange = "this.form.submit();"})
            </td>

            <td>
                <input type="submit" value="Filtrar" class="btn btn-default"/>
            </td>
        </tr>
    </table>
}
<table class="table">
    <tr>
        <th>Rol</th>
        <th>Usuario</th>
        <th>Acción</th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Rol.Descripcion)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Usuario.NombreDeUsuario)
            </td>
            <td>
                @(!item.EstaEnElRol ? Html.ActionLink(" Agregar", "CambiarRolUsuario", new { rolId = item.Rol.RolId, usuarioId = item.Usuario.UsuarioId }, new { @class = "glyphicon glyphicon-ok" }) : Html.ActionLink(" Quitar", "CambiarRolUsuario", new { rolId = item.Rol.RolId, usuarioId = item.Usuario.UsuarioId }, new { @class = "glyphicon glyphicon-remove" }))
            </td>
        </tr>
        }
</table>
