@model SisParkTD.Models.ViewModels.AbonoViewModel


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="container">
            <h4>Progreso del registro de abono</h4>
            <div class="progress">
                <div class="progress-bar" role="progressbar" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100" style="width: 50%">
                    <span class="sr-only">50% completado</span>
                </div>
            </div>
        </div>
        <hr />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Patente, new { @class = "control-label col-md-2 col-md-offset-1" })
            <div class="col-md-4">
                @(ViewBag.patente == null ? Html.EditorFor(model => model.Patente, new { htmlAttributes = new { @class = "form-control" } }) : Html.EditorFor(model => model.Patente, new { htmlAttributes = new { @class = "form-control", Value = ViewBag.patente } }))
                @Html.ValidationMessageFor(model => model.Patente, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (Model == null)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.RazonSocial, new { @class = "control-label col-md-2 col-md-offset-1" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.RazonSocial, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RazonSocial, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TipoDocumento, new { @class = "control-label col-md-2 col-md-offset-1" })
                <div class="col-md-4">
                    @Html.EnumDropDownListFor(model => model.TipoDocumento, "--seleccionar--", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.TipoDocumento, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.NumeroDocumento, new { @class = "control-label col-md-2 col-md-offset-1" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.NumeroDocumento, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NumeroDocumento, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Telefono, new { @class = "control-label col-md-2 col-md-offset-1" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else
        {
            <div class="form-group">
                @Html.LabelFor(model => model.RazonSocial, new { @class = "control-label col-md-2 col-md-offset-1" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.RazonSocial, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly"} })
                    @Html.ValidationMessageFor(model => model.RazonSocial, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TipoDocumento, new { @class = "control-label col-md-2 col-md-offset-1" })
                <div class="col-md-4">
                    @Html.EnumDropDownListFor(model => model.TipoDocumento, "--seleccionar--", new { @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.TipoDocumento, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.NumeroDocumento, new { @class = "control-label col-md-2 col-md-offset-1" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.NumeroDocumento, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.NumeroDocumento, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Telefono, new { @class = "control-label col-md-2 col-md-offset-1" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
                </div>
            </div>
        }





        <div class="form-group">
            @Html.Label("Abono Hasta(Mes, Año)", new { @class = "control-label col-md-2 col-md-offset-1" })

            <div class="form-inline">
                <div class="col-md-2">
                    @Html.EnumDropDownListFor(model => model.MesFin, "--selecionar--", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.MesFin, "", new { @class = "text-danger" })
                </div>


                <div class="col-md-2">
                    @Html.EditorFor(model => model.AnioFin, new { htmlAttributes = new { @class = "form-control", placeholder = "Año" } })
                    @Html.ValidationMessageFor(model => model.AnioFin, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <p class="text-danger col-md-offset-2">@ViewBag.errorFecha</p>

        <div class="form-group">
            <div class="col-md-offset-3 col-md-10">
                <input type="submit" value="Crear" class="btn btn-default" />
            </div>
        </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
